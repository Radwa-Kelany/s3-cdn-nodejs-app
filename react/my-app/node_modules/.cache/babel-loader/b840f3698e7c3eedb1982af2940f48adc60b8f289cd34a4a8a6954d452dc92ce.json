{"ast":null,"code":"var _jsxFileName = \"C:\\\\Radwa-Work\\\\Prototype project\\\\simple-form-s3-nodejs\\\\react\\\\my-app\\\\src\\\\NewPost.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewPost() {\n  _s();\n  const [file, setFile] = useState();\n  const [caption, setCaption] = useState('');\n  const Navigate = useNavigate();\n  const submit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('caption', caption);\n    await axios.post('http://localhost:8080/api/posts', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    Navigate('/');\n  };\n  const fileSelected = event => {\n    const file = event.target.files[0];\n    setFile(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex-column\",\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: fileSelected,\n        type: \"file\",\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setCaption(e.target.value),\n        value: caption,\n        type: \"text\",\n        placeholder: \"Caption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(NewPost, \"VAtixHWeIVbkVEGqzYEfFb3Uvlg=\", false, function () {\n  return [useNavigate];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["axios","useState","useNavigate","jsxDEV","_jsxDEV","NewPost","_s","file","setFile","caption","setCaption","Navigate","submit","event","preventDefault","formData","FormData","append","post","headers","fileSelected","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","accept","e","value","placeholder","_c","$RefreshReg$"],"sources":["C:/Radwa-Work/Prototype project/simple-form-s3-nodejs/react/my-app/src/NewPost.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction NewPost() {\r\n  const [file, setFile] = useState();\r\n  const [caption, setCaption] = useState('');\r\n  const Navigate = useNavigate();\r\n  const submit = async (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    formData.append('caption', caption);\r\n    await axios.post('http://localhost:8080/api/posts', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n    Navigate('/');\r\n  };\r\n\r\n  const fileSelected = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile(file);\r\n  };\r\n  return (\r\n    <div className='App'>\r\n      <h1>Create a Post</h1>\r\n      <form  className=\"flex-column\" onSubmit={submit}>\r\n        <input onChange={fileSelected} type=\"file\" accept=\"image/*\" />\r\n        <input\r\n          onChange={(e) => setCaption(e.target.value)}\r\n          value={caption}\r\n          type=\"text\"\r\n          placeholder=\"Caption\"\r\n        />\r\n        <button className='' type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewPost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,MAAM,GAAG,MAAOC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEV,IAAI,CAAC;IAC9BQ,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAER,OAAO,CAAC;IACnC,MAAMT,KAAK,CAACkB,IAAI,CAAC,iCAAiC,EAAEH,QAAQ,EAAE;MAC5DI,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACnD,CAAC,CAAC;IACFR,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMS,YAAY,GAAIP,KAAK,IAAK;IAC9B,MAAMN,IAAI,GAAGM,KAAK,CAACQ,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCd,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EACD,oBACEH,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAAoB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBxB,OAAA;MAAOmB,SAAS,EAAC,aAAa;MAACM,QAAQ,EAAEjB,MAAO;MAAAY,QAAA,gBAC9CpB,OAAA;QAAO0B,QAAQ,EAAEV,YAAa;QAACW,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9DxB,OAAA;QACE0B,QAAQ,EAAGG,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACZ,MAAM,CAACa,KAAK,CAAE;QAC5CA,KAAK,EAAEzB,OAAQ;QACfsB,IAAI,EAAC,MAAM;QACXI,WAAW,EAAC;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFxB,OAAA;QAAQmB,SAAS,EAAC,EAAE;QAACQ,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACtB,EAAA,CAlCQD,OAAO;EAAA,QAGGH,WAAW;AAAA;AAAAkC,EAAA,GAHrB/B,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}